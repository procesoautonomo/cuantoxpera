---------------FUENTE DATOS----------------------------
SELECT 1 ID, 'CLAUDIO' NOMBRE, 25 PLATA_QUE_PUSO
UNION ALL
SELECT 2, 'ULISES', 0

---------------LÓGICA CÁLCULO----------------------------
DECLARE @JODA AS TABLE (ID INT, NOMBRE VARCHAR(100), PLATA_QUE_PUSO FLOAT)
DECLARE @JODA_DIVISION AS TABLE (ID INT, NOMBRE VARCHAR(100), PLATA_QUE_PUSO FLOAT, TOTAL_JODA FLOAT, TOTAL_POR_PERA FLOAT, TIENE_QUE_PAGAR FLOAT, TIENE_QUE_RECIBIR FLOAT)
DECLARE @PAGOS AS TABLE (ID_PAGADOR INT, QUIEN_PAGA VARCHAR(100), CUANTO FLOAT, ID_COBRADOR INT, QUIEN_COBRA VARCHAR(100))

INSERT INTO @JODA
SELECT 1 ID, 'CLAUDIO' NOMBRE, 25 PLATA_QUE_PUSO
UNION ALL
SELECT 2, 'ULISES', 0


SELECT	ID,
		NOMBRE,
		PLATA_QUE_PUSO,
		(SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) TOTAL_JODA,
		ROUND((SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA),2) TOTAL_POR_PERA,
		CASE 
			WHEN PLATA_QUE_PUSO - (SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA) < 0 THEN ROUND(ABS(PLATA_QUE_PUSO - (SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA)),2)
			ELSE 0 
		END TIENE_QUE_PAGAR,
		CASE 
			WHEN PLATA_QUE_PUSO - (SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA) > 0 THEN ROUND(PLATA_QUE_PUSO - (SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA),2) 
			ELSE 0 
		END TIENE_QUE_RECIBIR
FROM @JODA
ORDER BY TIENE_QUE_RECIBIR DESC, TIENE_QUE_PAGAR ASC

INSERT INTO @JODA_DIVISION
SELECT	ID,
		NOMBRE,
		PLATA_QUE_PUSO,
		(SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) TOTAL_JODA,
		ROUND((SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA),2) TOTAL_POR_PERA,
		CASE 
			WHEN PLATA_QUE_PUSO - (SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA) < 0 THEN ROUND(ABS(PLATA_QUE_PUSO - (SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA)),2)
			ELSE 0 
		END TIENE_QUE_PAGAR,
		CASE 
			WHEN PLATA_QUE_PUSO - (SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA) > 0 THEN ROUND(PLATA_QUE_PUSO - (SELECT SUM(PLATA_QUE_PUSO) FROM @JODA) / (SELECT COUNT(*) FROM @JODA),2) 
			ELSE 0 
		END TIENE_QUE_RECIBIR
FROM @JODA
ORDER BY TIENE_QUE_RECIBIR DESC, TIENE_QUE_PAGAR ASC

DECLARE @RECIBOS AS TABLE (ID INT, NOMBRE VARCHAR(100), SALDO_DEUDOR FLOAT)
DECLARE @FACTURAS AS TABLE (ID INT, NOMBRE VARCHAR(100), SALDO_COBRADOR FLOAT)

INSERT INTO @RECIBOS
SELECT ID, NOMBRE, TIENE_QUE_PAGAR FROM @JODA_DIVISION WHERE TIENE_QUE_PAGAR <> 0 ORDER BY TIENE_QUE_PAGAR ASC

INSERT INTO @FACTURAS
SELECT ID, NOMBRE, TIENE_QUE_RECIBIR FROM @JODA_DIVISION WHERE TIENE_QUE_RECIBIR <> 0 ORDER BY TIENE_QUE_RECIBIR DESC

DECLARE @ID_DEUDOR AS INT, @NOMBRE_DEUDOR VARCHAR(100), @SALDO_DEUDOR AS MONEY
DECLARE @ID_COBRADOR AS INT, @NOMBRE_COBRADOR VARCHAR(100), @SALDO_COBRADOR AS MONEY
DECLARE @MONTO_PAGAR AS MONEY

DECLARE Cur_Select CURSOR FOR
SELECT ID, NOMBRE, SALDO_DEUDOR FROM @RECIBOS
OPEN Cur_Select 
FETCH NEXT FROM Cur_Select INTO @ID_DEUDOR, @NOMBRE_DEUDOR, @SALDO_DEUDOR
WHILE @@FETCH_STATUS = 0 
BEGIN
	WHILE @SALDO_DEUDOR <> 0
	BEGIN
		SELECT @ID_COBRADOR = NULL, @NOMBRE_COBRADOR = NULL, @SALDO_COBRADOR = NULL
		SET @MONTO_PAGAR = NULL
		
		SELECT TOP(1) @ID_COBRADOR = ID, @NOMBRE_COBRADOR = NOMBRE, @SALDO_COBRADOR = SALDO_COBRADOR 
		FROM @FACTURAS WHERE SALDO_COBRADOR <> 0 ORDER BY SALDO_COBRADOR DESC

		IF @SALDO_COBRADOR IS NOT NULL
			BEGIN
				IF (@SALDO_DEUDOR >= @SALDO_COBRADOR AND @SALDO_COBRADOR != 0)
					BEGIN
						SET @MONTO_PAGAR = @SALDO_COBRADOR
					END
				ELSE
					BEGIN
						SET @MONTO_PAGAR = @SALDO_DEUDOR
					END
				
				INSERT INTO @PAGOS								
				SELECT @ID_DEUDOR, @NOMBRE_DEUDOR, @MONTO_PAGAR, @ID_COBRADOR, @NOMBRE_COBRADOR
				
				UPDATE @FACTURAS
				SET SALDO_COBRADOR = SALDO_COBRADOR - @MONTO_PAGAR
				WHERE ID = @ID_COBRADOR
				
				--UPDATE @JODA_DIVISION
				--SET TIENE_QUE_PAGAR = TIENE_QUE_PAGAR - @MONTO_PAGAR
				--WHERE @ID_DEUDOR = @ID_DEUDOR

				SET @SALDO_DEUDOR = @SALDO_DEUDOR - @MONTO_PAGAR
			END
		ELSE 
			BEGIN
				SET @SALDO_DEUDOR = 0
			END
	END
	FETCH NEXT FROM Cur_Select INTO @ID_DEUDOR, @NOMBRE_DEUDOR, @SALDO_DEUDOR
END
CLOSE Cur_Select
DEALLOCATE Cur_Select

SELECT ID_PAGADOR, QUIEN_PAGA, ROUND(SUM(CUANTO),2) CUANTO,ROUND(SUM(CUANTO),0) CUANTO_REDONDEADO, ID_COBRADOR, QUIEN_COBRA
FROM @PAGOS
GROUP BY ID_PAGADOR, QUIEN_PAGA, ID_COBRADOR, QUIEN_COBRA
ORDER BY QUIEN_COBRA, QUIEN_PAGA